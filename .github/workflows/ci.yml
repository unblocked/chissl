on: [push, pull_request]
name: CI
jobs:
  # ================
  # TEST JOB
  #   runs on every push and PR
  #   runs 2x3 times (see matrix)
  # ================
  test:
    name: Test
    strategy:
      matrix:
        go-version: [1.21.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build (CGO)
        shell: bash
        run: |
          export CGO_ENABLED=1
          go version
          go build -v -o /dev/null .
      - name: Unit tests (exclude legacy e2e)
        shell: bash
        run: |
          set -euo pipefail
          export CGO_ENABLED=1
          pkgs=$(go list ./... | grep -v '/test/e2e')
          go test -v -count=1 $pkgs
      - name: Security tests (explicit)
        shell: bash
        run: |
          set -euo pipefail
          export CGO_ENABLED=1
          go test -v -count=1 ./tests
  # ================
  # RELEASE JOBS
  #   runs after a success test
  #   only runs on push "v*" tag
  # ================
  release_binaries:
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    name: Release Binaries
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: goreleaser
        if: success()
        uses: docker://goreleaser/goreleaser:latest
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          CGO_ENABLED: 1
        with:
          args: release --verbose --config .github/goreleaser.yml
  legacy_e2e:
    name: Legacy e2e (non-blocking)
    needs: test
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21.x
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run legacy e2e tests
        shell: bash
        run: |
          set -euo pipefail
          export CGO_ENABLED=1
          go test -v -count=1 ./test/e2e

